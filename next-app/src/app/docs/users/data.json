{
    "title": "This is the Users data collection",
    "desc": "Here you can find a list of users, these users are fake generated. Remember these endpoints actually don't modify the source data. You can use this data to enhance, mock or test your app. For details you can click each row",
    "endpoints": [
        {
            "status": "GET",
            "path": "/api/users",
            "code": "fetch('https://fooapi.com/api/users')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "queries": "?limit=n",
            "response": [
                {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11",
                    "birthdate": "1990-01-01",
                    "age": 30,
                    "gender": "Male",
                    "phone": "+63 791 675 8914",
                    "email": "foo@example.com",
                    "country": "USA",
                    "height": 170,
                    "weight": 70
                },
                "49 more elements..."
            ],
            "desc": "Get an array with the complete list of elements"
        },
        {
            "status": "GET",
            "path": "/api/users/:id",
            "code": "fetch('https://fooapi.com/api/users/1')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "response": {
                "id": "1",
                "name": "John",
                "lastname": "Doe",
                "username": "JohnxDoe11",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 170,
                "weight": 70
            },
            "desc": "Get an element by ID"
        },
        {
            "status": "GET",
            "path": "/api/users/rand",
            "code": "fetch('https://fooapi.com/api/users/rand')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "response": {
                "id": "1",
                "name": "John",
                "lastname": "Doe",
                "username": "JohnxDoe11",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 170,
                "weight": 70
            },
            "desc": "Get a random element"
        },
        {
            "status": "PUT",
            "path": "/api/users/:id",
            "code": "fetch('https://fooapi.com/api/users/1',{\n method: 'PUT',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'name':'foooName',\n  'lastname':'fooLastname',\n  'username':'fooUsername',\n  'birthdate':'1990-01-01',\n  'age':30,\n  'gender':'Male',\n  'phone':'+637916758914',\n  'email':'foo@example.com',\n  'country':'USA',\n  'height':180,\n  'weight':60  \n  })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "name": "foooName",
                "lastname": "fooLastname",
                "username": "fooUsername",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 180,
                "weight": 60
            },
            "response": {
                "id": "1",
                "name": "foooName",
                "lastname": "fooLastname",
                "username": "fooUsername",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 180,
                "weight": 60
            },
            "desc": "Update a complete element"
        },
        {
            "status": "PATCH",
            "path": "/api/users/:id",
            "code": "fetch('https://fooapi.com/api/users/1',{\n method: 'PATCH',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'name':'foooName'\n })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "name": "foooName"
            },
            "response": {
                "id": "1",
                "name": "foooName",
                "lastname": "Doe",
                "username": "JohnxDoe11",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 170,
                "weight": 70
            },
            "desc": "Update partial fields of an element."
        },
        {
            "status": "POST",
            "path": "/api/users",
            "code": "fetch('https://fooapi.com/api/users',{\n method: 'POST',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'name':'foooName',\n  'lastname':'fooLastname',\n  'username':'fooUsername',\n  'birthdate':'1990-01-01',\n  'age':30,\n  'gender':'Male',\n  'phone':'+637916758914',\n  'email':'foo@example.com',\n  'country':'USA',\n  'height':180,\n  'weight':60  \n  })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "name": "foooName",
                "lastname": "fooLastname",
                "username": "fooUsername",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 180,
                "weight": 60
            },
            "response": {
                "id": "51",
                "name": "foooName",
                "lastname": "fooLastname",
                "username": "fooUsername",
                "birthdate": "1990-01-01",
                "age": 30,
                "gender": "Male",
                "phone": "+63 791 675 8914",
                "email": "foo@example.com",
                "country": "USA",
                "height": 180,
                "weight": 60
            },
            "desc": "Create a new element."
        },
        {
            "status": "DELETE",
            "code": "fetch('https://fooapi.com/api/users/1', {method: 'DELETE'})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "path": "/api/users/:id",
            "payload": null,
            "response": {
                "id": "$id"
            },
            "desc": "Delete an element."
        },
        {
            "status": "GRAPHQL",
            "path": "/query",
            "payload": {
                "query": [
                    "users: [User!]!",
                    "user(id: ID!): User"
                ],
                "mutation": [
                    "createUser(input: CreateUserInput): User!",
                    "updateUser(id: ID!, input: UpdateUserInput): User!",
                    "deleteUser(id: ID!): User!"
                ]
            },
            "response": {
                "data": "According to your request"
            },
            "desc": "Endpoint to send your GraphQL queries"
        },
        {
            "status": "GRAPHQL",
            "path": "/playground",
            "desc": "Playground to test your GraphQL queries"
        }
    ]
}