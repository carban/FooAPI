{
    "title": "This is the To-Do data collection",
    "desc": "Here you can find a list of to-dos, these to-dos are fake generated. Remember these endpoints actually don't modify the source data. You can use this data to enhance, mock or test your app. For details click on the description",
    "endpoints": [
        {
            "status": "GET",
            "path": "/api/todos",
            "payload": null,
            "queries": "?limit=n",
            "response": [
                {
                    "id": "1",
                    "todo": "Organize your design portfolio: ...",
                    "state": "Working",
                    "closed": true,
                    "userId": "1"
                },
                "99 more elements..."
            ],
            "desc": "Get an array with the complete list of elements"
        },
        {
            "status": "GET",
            "path": "/api/todos/:id",
            "payload": null,
            "response": {
                "id": "1",
                "todo": "Organize your design portfolio: ...",
                "state": "Working",
                "closed": true,
                "userId": "1"
            },
            "desc": "Get an element by ID"
        },
        {
            "status": "GET",
            "path": "/api/todos/rand",
            "payload": null,
            "response": {
                "id": "1",
                "todo": "Organize your design portfolio: ...",
                "state": "Working",
                "closed": true,
                "userId": "1"
            },
            "desc": "Get a random element"
        },
        {
            "status": "PUT",
            "path": "/api/todos/:id",
            "payload": {
                "id": "1",
                "todo": "Foo content",
                "state": "Working",
                "closed": true,
                "userId": "1"
            },
            "response": {
                "id": "1",
                "todo": "Foo content",
                "state": "Working",
                "closed": true,
                "userId": "1"
            },
            "desc": "Update a complete element"
        },
        {
            "status": "PATCH",
            "path": "/api/todos/:id",
            "payload": {
                "todo": "fooooo"
            },
            "response": {
                "id": "1",
                "todo": "fooooo",
                "state": "Working",
                "closed": true,
                "userId": "1"
            },
            "desc": "Update partial fields of an element."
        },
        {
            "status": "POST",
            "path": "/api/todos",
            "payload": {
                "todo": "Foo content",
                "state": "Foo State",
                "closed": true,
                "userId": "1"
            },
            "response": {
                "id": "101",
                "todo": "Foo content",
                "state": "Foo State",
                "closed": true,
                "userId": "1"
            },
            "desc": "Create a new element."
        },
        {
            "status": "DELETE",
            "path": "/api/todos/:id",
            "payload": null,
            "response": {
                "id": "$id"
            },
            "desc": "Delete an element."
        },
        {
            "status": "GRAPHQL",
            "path": "/query",
            "payload": {
                "query": [
                    "todos: [Todo!]!",
                    "todo(id: ID!): Todo"
                ],
                "mutation": [
                    "createTodo(input: CreateTodoInput): Todo!",
                    "updateTodo(id: ID!, input: UpdateTodoInput): Todo!",
                    "deleteTodo(id: ID!): Todo!"
                ]
            },
            "response": {
                "data": "According to your request"
            },
            "desc": "Endpoint to send your GraphQL queries"
        },
        {
            "status": "GRAPHQL",
            "path": "/playground",
            "desc": "Playground to test your GraphQL queries"
        }
    ]
}