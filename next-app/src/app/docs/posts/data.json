{
    "title": "This is the Posts data collection",
    "desc": "Here you can find a list of posts, these posts are fake generated. Remember these endpoints actually don't modify the source data. You can use this data to enhance, mock or test your app. For details you can click each row",
    "endpoints": [
        {
            "status": "GET",
            "path": "/api/posts",
            "code": "fetch('https://fooapi.com/api/posts')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "queries": "?limit=n",
            "response": [
                {
                    "id": "1",
                    "title": "Loving Sunshine",
                    "content": "Loving this sunshine! Perfect day to break out the hammock...",
                    "visibility": "friends only",
                    "tags": [
                        "#VitaminD",
                        "#Bookworm"
                    ],
                    "reactions": 14,
                    "user": {
                        "id": "1",
                        "name": "John",
                        "lastname": "Doe",
                        "username": "JohnxDoe11"
                    }
                },
                "29 more elements..."
            ],
            "desc": "Get an array with the complete list of elements"
        },
        {
            "status": "GET",
            "path": "/api/posts/:id",
            "code": "fetch('https://fooapi.com/api/posts/1')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "response": {
                "id": "1",
                "title": "Loving Sunshine",
                "content": "Loving this sunshine! Perfect day to break out the hammock...",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "desc": "Get an element by ID"
        },
        {
            "status": "GET",
            "path": "/api/posts/rand",
            "code": "fetch('https://fooapi.com/api/posts/rand')\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": null,
            "response": {
                "id": "1",
                "title": "Loving Sunshine",
                "content": "Loving this sunshine! Perfect day to break out the hammock...",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "desc": "Get a random element"
        },
        {
            "status": "PUT",
            "path": "/api/posts/:id",
            "code": "fetch('https://fooapi.com/api/posts/1',{\n method: 'PUT',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'title':'Footitle',\n  'content':'FooContent',\n  'visibility':'friendsonly',\n  'tags':['#VitaminD', '#Bookworm'],\n  'reactions':14,\n  'user':{\n    'id': '1'\n    'name':'John',\n    'lastname':'Doe',\n    'username':'JohnxDoe11'\n  }\n })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "title": "Foo title",
                "content": "Foo Content",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "response": {
                "id": "1",
                "title": "Foo title",
                "content": "Foo Content",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "desc": "Update a complete element"
        },
        {
            "status": "PATCH",
            "path": "/api/posts/:id",
            "code": "fetch('https://fooapi.com/api/posts/1',{\n method: 'PATCH',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'content':'Foo Content',\n })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "content": "Foo Content"
            },
            "response": {
                "id": "1",
                "title": "Loving Sunshine",
                "content": "Foo Content",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "desc": "Update partial fields of an element."
        },
        {
            "status": "POST",
            "path": "/api/posts",
            "code": "fetch('https://fooapi.com/api/posts',{\n method: 'POST',\n headers: {'Content-Type': 'application/json'},\n body: JSON.stringify({\n  'title':'Foo title',\n  'content':'Foo Content',\n  'visibility':'friends only',\n  'tags':['#VitaminD', '#Bookworm'],\n  'reactions':14,\n  'user':{\n    'id': '1'\n    'name':'John',\n    'lastname':'Doe',\n    'username':'JohnxDoe11'\n  }\n })\n})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "payload": {
                "title": "Foo title",
                "content": "Foo Content",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "response": {
                "id": "31",
                "title": "Foo title",
                "content": "Foo Content",
                "visibility": "friends only",
                "tags": [
                    "#VitaminD",
                    "#Bookworm"
                ],
                "reactions": 14,
                "user": {
                    "id": "1",
                    "name": "John",
                    "lastname": "Doe",
                    "username": "JohnxDoe11"
                }
            },
            "desc": "Create a new element."
        },
        {
            "status": "DELETE",
            "code": "fetch('https://fooapi.com/api/posts/1', {method: 'DELETE'})\n  .then(res => res.json())\n  .then(data => console.log(data))",
            "path": "/api/posts/:id",
            "payload": null,
            "response": {
                "id": "1"
            },
            "desc": "Delete an element."
        },
        {
            "status": "GRAPHQL",
            "path": "/query",
            "code": "fetch('https://fooapi.com/query', { method: 'POST',\n  headers: {'Content-Type': 'application/json'},\n  body: JSON.stringify({\n    query: `{\n      post(id: \"3\"){\n       id title content\n      }\n    }`\n  })\n})\n.then(res => res.json())\n.then(res => console.log(res.data))",
            "payload": {
                "query": [
                    "posts: [Post!]!",
                    "post(id: ID!): Post"
                ],
                "mutation": [
                    "createPost(input: CreatePostInput): Post!",
                    "updatePost(id: ID!, input: UpdatePostInput): Post!",
                    "deletePost(id: ID!): Post!"
                ]
            },
            "response": {
                "data": "According to your request"
            },
            "desc": "Endpoint to send your GraphQL queries"
        },
        {
            "status": "GRAPHQL",
            "path": "/playground",
            "desc": "Playground to test your GraphQL queries"
        }
    ]
}